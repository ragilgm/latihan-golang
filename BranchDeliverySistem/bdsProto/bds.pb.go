// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: bds.proto

package BranchDeliverySystem

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID_USER  int64  `protobuf:"varint,1,opt,name=ID_USER,json=IDUSER,proto3" json:"ID_USER,omitempty"`
	NAMA     string `protobuf:"bytes,2,opt,name=NAMA,proto3" json:"NAMA,omitempty"`
	PASSWORD string `protobuf:"bytes,3,opt,name=PASSWORD,proto3" json:"PASSWORD,omitempty"`
	ROLE     string `protobuf:"bytes,4,opt,name=ROLE,proto3" json:"ROLE,omitempty"`
	CABANG   string `protobuf:"bytes,5,opt,name=CABANG,proto3" json:"CABANG,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetID_USER() int64 {
	if x != nil {
		return x.ID_USER
	}
	return 0
}

func (x *User) GetNAMA() string {
	if x != nil {
		return x.NAMA
	}
	return ""
}

func (x *User) GetPASSWORD() string {
	if x != nil {
		return x.PASSWORD
	}
	return ""
}

func (x *User) GetROLE() string {
	if x != nil {
		return x.ROLE
	}
	return ""
}

func (x *User) GetCABANG() string {
	if x != nil {
		return x.CABANG
	}
	return ""
}

type NASABAH struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CIF           int64  `protobuf:"varint,1,opt,name=CIF,proto3" json:"CIF,omitempty"`
	NIK           int64  `protobuf:"varint,2,opt,name=NIK,proto3" json:"NIK,omitempty"`
	NAMA          string `protobuf:"bytes,3,opt,name=NAMA,proto3" json:"NAMA,omitempty"`
	TEMPAT_LAHIR  string `protobuf:"bytes,4,opt,name=TEMPAT_LAHIR,json=TEMPATLAHIR,proto3" json:"TEMPAT_LAHIR,omitempty"`
	TANGGAL_LAHIR string `protobuf:"bytes,5,opt,name=TANGGAL_LAHIR,json=TANGGALLAHIR,proto3" json:"TANGGAL_LAHIR,omitempty"`
	ALAMAT        string `protobuf:"bytes,6,opt,name=ALAMAT,proto3" json:"ALAMAT,omitempty"`
	NO_TELP       string `protobuf:"bytes,7,opt,name=NO_TELP,json=NOTELP,proto3" json:"NO_TELP,omitempty"`
}

func (x *NASABAH) Reset() {
	*x = NASABAH{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NASABAH) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NASABAH) ProtoMessage() {}

func (x *NASABAH) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NASABAH.ProtoReflect.Descriptor instead.
func (*NASABAH) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{1}
}

func (x *NASABAH) GetCIF() int64 {
	if x != nil {
		return x.CIF
	}
	return 0
}

func (x *NASABAH) GetNIK() int64 {
	if x != nil {
		return x.NIK
	}
	return 0
}

func (x *NASABAH) GetNAMA() string {
	if x != nil {
		return x.NAMA
	}
	return ""
}

func (x *NASABAH) GetTEMPAT_LAHIR() string {
	if x != nil {
		return x.TEMPAT_LAHIR
	}
	return ""
}

func (x *NASABAH) GetTANGGAL_LAHIR() string {
	if x != nil {
		return x.TANGGAL_LAHIR
	}
	return ""
}

func (x *NASABAH) GetALAMAT() string {
	if x != nil {
		return x.ALAMAT
	}
	return ""
}

func (x *NASABAH) GetNO_TELP() string {
	if x != nil {
		return x.NO_TELP
	}
	return ""
}

type NASABAH_DETAIL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CIF         int64 `protobuf:"varint,1,opt,name=CIF,proto3" json:"CIF,omitempty"`
	NO_REKENING int64 `protobuf:"varint,2,opt,name=NO_REKENING,json=NOREKENING,proto3" json:"NO_REKENING,omitempty"`
	SALDO       int64 `protobuf:"varint,3,opt,name=SALDO,proto3" json:"SALDO,omitempty"`
}

func (x *NASABAH_DETAIL) Reset() {
	*x = NASABAH_DETAIL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NASABAH_DETAIL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NASABAH_DETAIL) ProtoMessage() {}

func (x *NASABAH_DETAIL) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NASABAH_DETAIL.ProtoReflect.Descriptor instead.
func (*NASABAH_DETAIL) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{2}
}

func (x *NASABAH_DETAIL) GetCIF() int64 {
	if x != nil {
		return x.CIF
	}
	return 0
}

func (x *NASABAH_DETAIL) GetNO_REKENING() int64 {
	if x != nil {
		return x.NO_REKENING
	}
	return 0
}

func (x *NASABAH_DETAIL) GetSALDO() int64 {
	if x != nil {
		return x.SALDO
	}
	return 0
}

type TRANSAKSI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ID_USER         int64  `protobuf:"varint,2,opt,name=ID_USER,json=IDUSER,proto3" json:"ID_USER,omitempty"`
	NO_REKENING     int64  `protobuf:"varint,3,opt,name=NO_REKENING,json=NOREKENING,proto3" json:"NO_REKENING,omitempty"`
	TANGGAL         string `protobuf:"bytes,4,opt,name=TANGGAL,proto3" json:"TANGGAL,omitempty"`
	JENIS_TRANSAKSI string `protobuf:"bytes,5,opt,name=JENIS_TRANSAKSI,json=JENISTRANSAKSI,proto3" json:"JENIS_TRANSAKSI,omitempty"`
	NOMINAL         int64  `protobuf:"varint,6,opt,name=NOMINAL,proto3" json:"NOMINAL,omitempty"`
	SALDO           int64  `protobuf:"varint,7,opt,name=SALDO,proto3" json:"SALDO,omitempty"`
	BERITA          string `protobuf:"bytes,8,opt,name=BERITA,proto3" json:"BERITA,omitempty"`
}

func (x *TRANSAKSI) Reset() {
	*x = TRANSAKSI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TRANSAKSI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TRANSAKSI) ProtoMessage() {}

func (x *TRANSAKSI) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TRANSAKSI.ProtoReflect.Descriptor instead.
func (*TRANSAKSI) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{3}
}

func (x *TRANSAKSI) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TRANSAKSI) GetID_USER() int64 {
	if x != nil {
		return x.ID_USER
	}
	return 0
}

func (x *TRANSAKSI) GetNO_REKENING() int64 {
	if x != nil {
		return x.NO_REKENING
	}
	return 0
}

func (x *TRANSAKSI) GetTANGGAL() string {
	if x != nil {
		return x.TANGGAL
	}
	return ""
}

func (x *TRANSAKSI) GetJENIS_TRANSAKSI() string {
	if x != nil {
		return x.JENIS_TRANSAKSI
	}
	return ""
}

func (x *TRANSAKSI) GetNOMINAL() int64 {
	if x != nil {
		return x.NOMINAL
	}
	return 0
}

func (x *TRANSAKSI) GetSALDO() int64 {
	if x != nil {
		return x.SALDO
	}
	return 0
}

func (x *TRANSAKSI) GetBERITA() string {
	if x != nil {
		return x.BERITA
	}
	return ""
}

type NASABAH_INFO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NASABAH        *NASABAH        `protobuf:"bytes,1,opt,name=NASABAH,proto3" json:"NASABAH,omitempty"`
	NASABAH_DETAIL *NASABAH_DETAIL `protobuf:"bytes,2,opt,name=NASABAH_DETAIL,json=NASABAHDETAIL,proto3" json:"NASABAH_DETAIL,omitempty"`
}

func (x *NASABAH_INFO) Reset() {
	*x = NASABAH_INFO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NASABAH_INFO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NASABAH_INFO) ProtoMessage() {}

func (x *NASABAH_INFO) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NASABAH_INFO.ProtoReflect.Descriptor instead.
func (*NASABAH_INFO) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{4}
}

func (x *NASABAH_INFO) GetNASABAH() *NASABAH {
	if x != nil {
		return x.NASABAH
	}
	return nil
}

func (x *NASABAH_INFO) GetNASABAH_DETAIL() *NASABAH_DETAIL {
	if x != nil {
		return x.NASABAH_DETAIL
	}
	return nil
}

type OVERBOOKING struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdUser         int64           `protobuf:"varint,1,opt,name=IdUser,proto3" json:"IdUser,omitempty"`
	NasabahDetail1 *NASABAH_DETAIL `protobuf:"bytes,2,opt,name=NasabahDetail1,proto3" json:"NasabahDetail1,omitempty"`
	NasabahDetail2 *NASABAH_DETAIL `protobuf:"bytes,3,opt,name=NasabahDetail2,proto3" json:"NasabahDetail2,omitempty"`
	Nominal        int64           `protobuf:"varint,4,opt,name=Nominal,proto3" json:"Nominal,omitempty"`
	BERITA         string          `protobuf:"bytes,5,opt,name=BERITA,proto3" json:"BERITA,omitempty"`
}

func (x *OVERBOOKING) Reset() {
	*x = OVERBOOKING{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OVERBOOKING) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OVERBOOKING) ProtoMessage() {}

func (x *OVERBOOKING) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OVERBOOKING.ProtoReflect.Descriptor instead.
func (*OVERBOOKING) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{5}
}

func (x *OVERBOOKING) GetIdUser() int64 {
	if x != nil {
		return x.IdUser
	}
	return 0
}

func (x *OVERBOOKING) GetNasabahDetail1() *NASABAH_DETAIL {
	if x != nil {
		return x.NasabahDetail1
	}
	return nil
}

func (x *OVERBOOKING) GetNasabahDetail2() *NASABAH_DETAIL {
	if x != nil {
		return x.NasabahDetail2
	}
	return nil
}

func (x *OVERBOOKING) GetNominal() int64 {
	if x != nil {
		return x.Nominal
	}
	return 0
}

func (x *OVERBOOKING) GetBERITA() string {
	if x != nil {
		return x.BERITA
	}
	return ""
}

type CETAKBUKU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TRANSAKSI []*TRANSAKSI `protobuf:"bytes,1,rep,name=TRANSAKSI,proto3" json:"TRANSAKSI,omitempty"`
}

func (x *CETAKBUKU) Reset() {
	*x = CETAKBUKU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CETAKBUKU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CETAKBUKU) ProtoMessage() {}

func (x *CETAKBUKU) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CETAKBUKU.ProtoReflect.Descriptor instead.
func (*CETAKBUKU) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{6}
}

func (x *CETAKBUKU) GetTRANSAKSI() []*TRANSAKSI {
	if x != nil {
		return x.TRANSAKSI
	}
	return nil
}

type STATUS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *STATUS) Reset() {
	*x = STATUS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STATUS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STATUS) ProtoMessage() {}

func (x *STATUS) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STATUS.ProtoReflect.Descriptor instead.
func (*STATUS) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{7}
}

func (x *STATUS) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type EMPTY struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EMPTY) Reset() {
	*x = EMPTY{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bds_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMPTY) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMPTY) ProtoMessage() {}

func (x *EMPTY) ProtoReflect() protoreflect.Message {
	mi := &file_bds_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMPTY.ProtoReflect.Descriptor instead.
func (*EMPTY) Descriptor() ([]byte, []int) {
	return file_bds_proto_rawDescGZIP(), []int{8}
}

var File_bds_proto protoreflect.FileDescriptor

var file_bds_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x22, 0x7b, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x49, 0x44, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x44, 0x55, 0x53,
	0x45, 0x52, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x41, 0x4d, 0x41, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x4f, 0x4c, 0x45, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x52, 0x4f, 0x4c, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x41, 0x42, 0x41, 0x4e, 0x47,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x41, 0x42, 0x41, 0x4e, 0x47, 0x22, 0xba,
	0x01, 0x0a, 0x07, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x49,
	0x46, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x43, 0x49, 0x46, 0x12, 0x10, 0x0a, 0x03,
	0x4e, 0x49, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x49, 0x4b, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x41, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x41,
	0x4d, 0x41, 0x12, 0x21, 0x0a, 0x0c, 0x54, 0x45, 0x4d, 0x50, 0x41, 0x54, 0x5f, 0x4c, 0x41, 0x48,
	0x49, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x45, 0x4d, 0x50, 0x41, 0x54,
	0x4c, 0x41, 0x48, 0x49, 0x52, 0x12, 0x23, 0x0a, 0x0d, 0x54, 0x41, 0x4e, 0x47, 0x47, 0x41, 0x4c,
	0x5f, 0x4c, 0x41, 0x48, 0x49, 0x52, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x41,
	0x4e, 0x47, 0x47, 0x41, 0x4c, 0x4c, 0x41, 0x48, 0x49, 0x52, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x4c,
	0x41, 0x4d, 0x41, 0x54, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x4c, 0x41, 0x4d,
	0x41, 0x54, 0x12, 0x17, 0x0a, 0x07, 0x4e, 0x4f, 0x5f, 0x54, 0x45, 0x4c, 0x50, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x4f, 0x54, 0x45, 0x4c, 0x50, 0x22, 0x59, 0x0a, 0x0e, 0x4e,
	0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x12, 0x10, 0x0a,
	0x03, 0x43, 0x49, 0x46, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x43, 0x49, 0x46, 0x12,
	0x1f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x4b, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4e, 0x4f, 0x52, 0x45, 0x4b, 0x45, 0x4e, 0x49, 0x4e, 0x47,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x41, 0x4c, 0x44, 0x4f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x53, 0x41, 0x4c, 0x44, 0x4f, 0x22, 0xe0, 0x01, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x41, 0x4b, 0x53, 0x49, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x49, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x44, 0x55, 0x53, 0x45, 0x52, 0x12, 0x1f, 0x0a,
	0x0b, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x4b, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x4e, 0x4f, 0x52, 0x45, 0x4b, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x12, 0x18,
	0x0a, 0x07, 0x54, 0x41, 0x4e, 0x47, 0x47, 0x41, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x54, 0x41, 0x4e, 0x47, 0x47, 0x41, 0x4c, 0x12, 0x27, 0x0a, 0x0f, 0x4a, 0x45, 0x4e, 0x49,
	0x53, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x4b, 0x53, 0x49, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x4a, 0x45, 0x4e, 0x49, 0x53, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x4b, 0x53,
	0x49, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x4f, 0x4d, 0x49, 0x4e, 0x41, 0x4c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x4e, 0x4f, 0x4d, 0x49, 0x4e, 0x41, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x41, 0x4c, 0x44, 0x4f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x41, 0x4c, 0x44,
	0x4f, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x45, 0x52, 0x49, 0x54, 0x41, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x42, 0x45, 0x52, 0x49, 0x54, 0x41, 0x22, 0x94, 0x01, 0x0a, 0x0c, 0x4e, 0x41,
	0x53, 0x41, 0x42, 0x41, 0x48, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x12, 0x37, 0x0a, 0x07, 0x4e, 0x41,
	0x53, 0x41, 0x42, 0x41, 0x48, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x52, 0x07, 0x4e, 0x41, 0x53, 0x41,
	0x42, 0x41, 0x48, 0x12, 0x4b, 0x0a, 0x0e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f, 0x44,
	0x45, 0x54, 0x41, 0x49, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49,
	0x4c, 0x52, 0x0d, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c,
	0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x4f, 0x56, 0x45, 0x52, 0x42, 0x4f, 0x4f, 0x4b, 0x49, 0x4e, 0x47,
	0x12, 0x16, 0x0a, 0x06, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0e, 0x4e, 0x61, 0x73, 0x61,
	0x62, 0x61, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f,
	0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x52, 0x0e, 0x4e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x31, 0x12, 0x4c, 0x0a, 0x0e, 0x4e, 0x61, 0x73, 0x61, 0x62, 0x61,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f, 0x44, 0x45,
	0x54, 0x41, 0x49, 0x4c, 0x52, 0x0e, 0x4e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x42, 0x45, 0x52, 0x49, 0x54, 0x41, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x42, 0x45, 0x52, 0x49, 0x54, 0x41, 0x22, 0x4a, 0x0a, 0x09, 0x43, 0x45, 0x54, 0x41, 0x4b, 0x42,
	0x55, 0x4b, 0x55, 0x12, 0x3d, 0x0a, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x4b, 0x53, 0x49,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x4b, 0x53, 0x49, 0x52, 0x09, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x4b,
	0x53, 0x49, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x32, 0xc4, 0x05,
	0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x43, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x1a,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x6f, 0x72, 0x54, 0x75, 0x6e, 0x61, 0x69, 0x12, 0x1f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x4b, 0x53, 0x49, 0x1a, 0x1c, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x4b, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x69, 0x6b,
	0x54, 0x75, 0x6e, 0x61, 0x69, 0x12, 0x1f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x41, 0x4b, 0x53, 0x49, 0x1a, 0x1c, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x12, 0x53, 0x0a, 0x0b, 0x4f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4f, 0x56, 0x45, 0x52, 0x42,
	0x4f, 0x4f, 0x4b, 0x49, 0x4e, 0x47, 0x1a, 0x21, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4f, 0x56,
	0x45, 0x52, 0x42, 0x4f, 0x4f, 0x4b, 0x49, 0x4e, 0x47, 0x12, 0x4d, 0x0a, 0x09, 0x43, 0x65, 0x74,
	0x61, 0x6b, 0x42, 0x75, 0x6b, 0x75, 0x12, 0x1f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x4b, 0x53, 0x49, 0x1a, 0x1f, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43,
	0x45, 0x54, 0x41, 0x4b, 0x42, 0x55, 0x4b, 0x55, 0x12, 0x49, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x79, 0x4e, 0x49, 0x4b, 0x12, 0x1d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53,
	0x41, 0x42, 0x41, 0x48, 0x1a, 0x1d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41,
	0x42, 0x41, 0x48, 0x12, 0x4e, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x49, 0x46,
	0x12, 0x1d, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x1a,
	0x22, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x12, 0x47, 0x0a, 0x07, 0x42, 0x75, 0x61, 0x74, 0x43, 0x69, 0x66, 0x12, 0x1d,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x1a, 0x1d, 0x2e,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x12, 0x56, 0x0a, 0x0c,
	0x42, 0x75, 0x61, 0x74, 0x54, 0x61, 0x62, 0x75, 0x6e, 0x67, 0x61, 0x6e, 0x12, 0x22, 0x2e, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x1a, 0x22, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4e, 0x41, 0x53, 0x41, 0x42, 0x41, 0x48, 0x5f,
	0x49, 0x4e, 0x46, 0x4f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bds_proto_rawDescOnce sync.Once
	file_bds_proto_rawDescData = file_bds_proto_rawDesc
)

func file_bds_proto_rawDescGZIP() []byte {
	file_bds_proto_rawDescOnce.Do(func() {
		file_bds_proto_rawDescData = protoimpl.X.CompressGZIP(file_bds_proto_rawDescData)
	})
	return file_bds_proto_rawDescData
}

var file_bds_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bds_proto_goTypes = []interface{}{
	(*User)(nil),           // 0: BranchDeliverySystem.User
	(*NASABAH)(nil),        // 1: BranchDeliverySystem.NASABAH
	(*NASABAH_DETAIL)(nil), // 2: BranchDeliverySystem.NASABAH_DETAIL
	(*TRANSAKSI)(nil),      // 3: BranchDeliverySystem.TRANSAKSI
	(*NASABAH_INFO)(nil),   // 4: BranchDeliverySystem.NASABAH_INFO
	(*OVERBOOKING)(nil),    // 5: BranchDeliverySystem.OVERBOOKING
	(*CETAKBUKU)(nil),      // 6: BranchDeliverySystem.CETAKBUKU
	(*STATUS)(nil),         // 7: BranchDeliverySystem.STATUS
	(*EMPTY)(nil),          // 8: BranchDeliverySystem.EMPTY
}
var file_bds_proto_depIdxs = []int32{
	1,  // 0: BranchDeliverySystem.NASABAH_INFO.NASABAH:type_name -> BranchDeliverySystem.NASABAH
	2,  // 1: BranchDeliverySystem.NASABAH_INFO.NASABAH_DETAIL:type_name -> BranchDeliverySystem.NASABAH_DETAIL
	2,  // 2: BranchDeliverySystem.OVERBOOKING.NasabahDetail1:type_name -> BranchDeliverySystem.NASABAH_DETAIL
	2,  // 3: BranchDeliverySystem.OVERBOOKING.NasabahDetail2:type_name -> BranchDeliverySystem.NASABAH_DETAIL
	3,  // 4: BranchDeliverySystem.CETAKBUKU.TRANSAKSI:type_name -> BranchDeliverySystem.TRANSAKSI
	0,  // 5: BranchDeliverySystem.Add.LoginUser:input_type -> BranchDeliverySystem.User
	3,  // 6: BranchDeliverySystem.Add.SetorTunai:input_type -> BranchDeliverySystem.TRANSAKSI
	3,  // 7: BranchDeliverySystem.Add.TarikTunai:input_type -> BranchDeliverySystem.TRANSAKSI
	5,  // 8: BranchDeliverySystem.Add.OverBooking:input_type -> BranchDeliverySystem.OVERBOOKING
	3,  // 9: BranchDeliverySystem.Add.CetakBuku:input_type -> BranchDeliverySystem.TRANSAKSI
	1,  // 10: BranchDeliverySystem.Add.FindByNIK:input_type -> BranchDeliverySystem.NASABAH
	1,  // 11: BranchDeliverySystem.Add.FindByCIF:input_type -> BranchDeliverySystem.NASABAH
	1,  // 12: BranchDeliverySystem.Add.BuatCif:input_type -> BranchDeliverySystem.NASABAH
	4,  // 13: BranchDeliverySystem.Add.BuatTabungan:input_type -> BranchDeliverySystem.NASABAH_INFO
	0,  // 14: BranchDeliverySystem.Add.LoginUser:output_type -> BranchDeliverySystem.User
	7,  // 15: BranchDeliverySystem.Add.SetorTunai:output_type -> BranchDeliverySystem.STATUS
	7,  // 16: BranchDeliverySystem.Add.TarikTunai:output_type -> BranchDeliverySystem.STATUS
	5,  // 17: BranchDeliverySystem.Add.OverBooking:output_type -> BranchDeliverySystem.OVERBOOKING
	6,  // 18: BranchDeliverySystem.Add.CetakBuku:output_type -> BranchDeliverySystem.CETAKBUKU
	1,  // 19: BranchDeliverySystem.Add.FindByNIK:output_type -> BranchDeliverySystem.NASABAH
	4,  // 20: BranchDeliverySystem.Add.FindByCIF:output_type -> BranchDeliverySystem.NASABAH_INFO
	1,  // 21: BranchDeliverySystem.Add.BuatCif:output_type -> BranchDeliverySystem.NASABAH
	4,  // 22: BranchDeliverySystem.Add.BuatTabungan:output_type -> BranchDeliverySystem.NASABAH_INFO
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_bds_proto_init() }
func file_bds_proto_init() {
	if File_bds_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bds_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NASABAH); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NASABAH_DETAIL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TRANSAKSI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NASABAH_INFO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OVERBOOKING); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CETAKBUKU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STATUS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bds_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMPTY); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bds_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bds_proto_goTypes,
		DependencyIndexes: file_bds_proto_depIdxs,
		MessageInfos:      file_bds_proto_msgTypes,
	}.Build()
	File_bds_proto = out.File
	file_bds_proto_rawDesc = nil
	file_bds_proto_goTypes = nil
	file_bds_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddClient is the client API for Add service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddClient interface {
	LoginUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	SetorTunai(ctx context.Context, in *TRANSAKSI, opts ...grpc.CallOption) (*STATUS, error)
	TarikTunai(ctx context.Context, in *TRANSAKSI, opts ...grpc.CallOption) (*STATUS, error)
	OverBooking(ctx context.Context, in *OVERBOOKING, opts ...grpc.CallOption) (*OVERBOOKING, error)
	CetakBuku(ctx context.Context, in *TRANSAKSI, opts ...grpc.CallOption) (*CETAKBUKU, error)
	FindByNIK(ctx context.Context, in *NASABAH, opts ...grpc.CallOption) (*NASABAH, error)
	FindByCIF(ctx context.Context, in *NASABAH, opts ...grpc.CallOption) (*NASABAH_INFO, error)
	BuatCif(ctx context.Context, in *NASABAH, opts ...grpc.CallOption) (*NASABAH, error)
	BuatTabungan(ctx context.Context, in *NASABAH_INFO, opts ...grpc.CallOption) (*NASABAH_INFO, error)
}

type addClient struct {
	cc grpc.ClientConnInterface
}

func NewAddClient(cc grpc.ClientConnInterface) AddClient {
	return &addClient{cc}
}

func (c *addClient) LoginUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) SetorTunai(ctx context.Context, in *TRANSAKSI, opts ...grpc.CallOption) (*STATUS, error) {
	out := new(STATUS)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/SetorTunai", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) TarikTunai(ctx context.Context, in *TRANSAKSI, opts ...grpc.CallOption) (*STATUS, error) {
	out := new(STATUS)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/TarikTunai", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) OverBooking(ctx context.Context, in *OVERBOOKING, opts ...grpc.CallOption) (*OVERBOOKING, error) {
	out := new(OVERBOOKING)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/OverBooking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) CetakBuku(ctx context.Context, in *TRANSAKSI, opts ...grpc.CallOption) (*CETAKBUKU, error) {
	out := new(CETAKBUKU)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/CetakBuku", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) FindByNIK(ctx context.Context, in *NASABAH, opts ...grpc.CallOption) (*NASABAH, error) {
	out := new(NASABAH)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/FindByNIK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) FindByCIF(ctx context.Context, in *NASABAH, opts ...grpc.CallOption) (*NASABAH_INFO, error) {
	out := new(NASABAH_INFO)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/FindByCIF", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) BuatCif(ctx context.Context, in *NASABAH, opts ...grpc.CallOption) (*NASABAH, error) {
	out := new(NASABAH)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/BuatCif", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addClient) BuatTabungan(ctx context.Context, in *NASABAH_INFO, opts ...grpc.CallOption) (*NASABAH_INFO, error) {
	out := new(NASABAH_INFO)
	err := c.cc.Invoke(ctx, "/BranchDeliverySystem.Add/BuatTabungan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddServer is the server API for Add service.
type AddServer interface {
	LoginUser(context.Context, *User) (*User, error)
	SetorTunai(context.Context, *TRANSAKSI) (*STATUS, error)
	TarikTunai(context.Context, *TRANSAKSI) (*STATUS, error)
	OverBooking(context.Context, *OVERBOOKING) (*OVERBOOKING, error)
	CetakBuku(context.Context, *TRANSAKSI) (*CETAKBUKU, error)
	FindByNIK(context.Context, *NASABAH) (*NASABAH, error)
	FindByCIF(context.Context, *NASABAH) (*NASABAH_INFO, error)
	BuatCif(context.Context, *NASABAH) (*NASABAH, error)
	BuatTabungan(context.Context, *NASABAH_INFO) (*NASABAH_INFO, error)
}

// UnimplementedAddServer can be embedded to have forward compatible implementations.
type UnimplementedAddServer struct {
}

func (*UnimplementedAddServer) LoginUser(context.Context, *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (*UnimplementedAddServer) SetorTunai(context.Context, *TRANSAKSI) (*STATUS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetorTunai not implemented")
}
func (*UnimplementedAddServer) TarikTunai(context.Context, *TRANSAKSI) (*STATUS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TarikTunai not implemented")
}
func (*UnimplementedAddServer) OverBooking(context.Context, *OVERBOOKING) (*OVERBOOKING, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OverBooking not implemented")
}
func (*UnimplementedAddServer) CetakBuku(context.Context, *TRANSAKSI) (*CETAKBUKU, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CetakBuku not implemented")
}
func (*UnimplementedAddServer) FindByNIK(context.Context, *NASABAH) (*NASABAH, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByNIK not implemented")
}
func (*UnimplementedAddServer) FindByCIF(context.Context, *NASABAH) (*NASABAH_INFO, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByCIF not implemented")
}
func (*UnimplementedAddServer) BuatCif(context.Context, *NASABAH) (*NASABAH, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuatCif not implemented")
}
func (*UnimplementedAddServer) BuatTabungan(context.Context, *NASABAH_INFO) (*NASABAH_INFO, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuatTabungan not implemented")
}

func RegisterAddServer(s *grpc.Server, srv AddServer) {
	s.RegisterService(&_Add_serviceDesc, srv)
}

func _Add_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).LoginUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_SetorTunai_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TRANSAKSI)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).SetorTunai(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/SetorTunai",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).SetorTunai(ctx, req.(*TRANSAKSI))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_TarikTunai_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TRANSAKSI)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).TarikTunai(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/TarikTunai",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).TarikTunai(ctx, req.(*TRANSAKSI))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_OverBooking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OVERBOOKING)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).OverBooking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/OverBooking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).OverBooking(ctx, req.(*OVERBOOKING))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_CetakBuku_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TRANSAKSI)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).CetakBuku(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/CetakBuku",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).CetakBuku(ctx, req.(*TRANSAKSI))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_FindByNIK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NASABAH)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).FindByNIK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/FindByNIK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).FindByNIK(ctx, req.(*NASABAH))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_FindByCIF_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NASABAH)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).FindByCIF(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/FindByCIF",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).FindByCIF(ctx, req.(*NASABAH))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_BuatCif_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NASABAH)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).BuatCif(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/BuatCif",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).BuatCif(ctx, req.(*NASABAH))
	}
	return interceptor(ctx, in, info, handler)
}

func _Add_BuatTabungan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NASABAH_INFO)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddServer).BuatTabungan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BranchDeliverySystem.Add/BuatTabungan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddServer).BuatTabungan(ctx, req.(*NASABAH_INFO))
	}
	return interceptor(ctx, in, info, handler)
}

var _Add_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BranchDeliverySystem.Add",
	HandlerType: (*AddServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginUser",
			Handler:    _Add_LoginUser_Handler,
		},
		{
			MethodName: "SetorTunai",
			Handler:    _Add_SetorTunai_Handler,
		},
		{
			MethodName: "TarikTunai",
			Handler:    _Add_TarikTunai_Handler,
		},
		{
			MethodName: "OverBooking",
			Handler:    _Add_OverBooking_Handler,
		},
		{
			MethodName: "CetakBuku",
			Handler:    _Add_CetakBuku_Handler,
		},
		{
			MethodName: "FindByNIK",
			Handler:    _Add_FindByNIK_Handler,
		},
		{
			MethodName: "FindByCIF",
			Handler:    _Add_FindByCIF_Handler,
		},
		{
			MethodName: "BuatCif",
			Handler:    _Add_BuatCif_Handler,
		},
		{
			MethodName: "BuatTabungan",
			Handler:    _Add_BuatTabungan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bds.proto",
}
